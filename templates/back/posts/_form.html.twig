{{ form_start(form) }}

    {% if post.imgPost is empty %}
            <img src={{'https://res.cloudinary.com/dsn2zwbis/image/upload/unetaupechezvous/Accueil.webp'}} alt="imgHeader" > 
    {% else %}
            <img src={{post.imgPost}} alt="imgHeader" >
    {% endif %}
            <ul class="pb-4">
                <li class="flex text-lg">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M9.568 3H5.25A2.25 2.25 0 003 5.25v4.318c0 .597.237 1.17.659 1.591l9.581 9.581c.699.699 1.78.872 2.607.33a18.095 18.095 0 005.223-5.223c.542-.827.369-1.908-.33-2.607L11.16 3.66A2.25 2.25 0 009.568 3z" />
                    <path stroke-linecap="round" stroke-linejoin="round" d="M6 6h.008v.008H6V6z" />
                    </svg> Catégories :
                </li>
                <li class="flex text-sm border-gray-600 border-b">
                    {{ form_widget(form.category) }}
                </li>
                <li class="flex text-lg pt-4">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M9.568 3H5.25A2.25 2.25 0 003 5.25v4.318c0 .597.237 1.17.659 1.591l9.581 9.581c.699.699 1.78.872 2.607.33a18.095 18.095 0 005.223-5.223c.542-.827.369-1.908-.33-2.607L11.16 3.66A2.25 2.25 0 009.568 3z" />
                    <path stroke-linecap="round" stroke-linejoin="round" d="M6 6h.008v.008H6V6z" />
                    </svg> Sous-catégories :
                </li>
                <li class=" text-sm border-gray-600 border-b ">
                    {{ form_widget(form.subcategory) }}
                </li>
                <li>
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M9.568 3H5.25A2.25 2.25 0 003 5.25v4.318c0 .597.237 1.17.659 1.591l9.581 9.581c.699.699 1.78.872 2.607.33a18.095 18.095 0 005.223-5.223c.542-.827.369-1.908-.33-2.607L11.16 3.66A2.25 2.25 0 009.568 3z" />
                        <path stroke-linecap="round" stroke-linejoin="round" d="M6 6h.008v.008H6V6z" />
                        </svg> Keywords :
                </li>
                <li class="flex text-sm border-gray-600 border-b">
                    {{ form_widget(form.keywords) }}
                </li>

            </ul>
            {{ form_row(form.imgPost) }}
            <div class="add__altImg hidden">
                {{ form_row(form.altImg) }}
            </div>
            <p class="button__altImg pb-4">Changez le descriptif de l'image</p>

            {{ form_row(form.heading) }}
            {{ form_label(form.title) }}
            {{ form_widget(form.title) }}
            {{ form_label(form.metaDescription) }}
            {{ form_widget(form.metaDescription) }}

            
            {{ form_row(form.contents) }}
            
            
            <div class="pt-4">



            <div class="add__link hidden">
                
                {{ form_label(form.links) }}
                {{ form_widget(form.links) }}
                {{ form_label(form.textLinks) }}
                {{ form_widget(form.textLinks) }}
            </div>
            <div class="button__link flex text-lg border-gray-600 border-b pt-4">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M13.19 8.688a4.5 4.5 0 011.242 7.244l-4.5 4.5a4.5 4.5 0 01-6.364-6.364l1.757-1.757m13.35-.622l1.757-1.757a4.5 4.5 0 00-6.364-6.364l-4.5 4.5a4.5 4.5 0 001.242 7.244" />
                  </svg>
                  Ajouter un lien
            </div>

            {{ form_row(form.translations) }}

            <button class="button is-primary ">{{ button_label|default('Save') }}</button>

{{ form_end(form) }}

{% block javascripts %}
    <script src={{asset('js/posts.js')}}></script>
    <script type="text/javascript">

 
const textareaContents = document.querySelector('#posts_contents');

textareaContents.addEventListener('input', (e) => {
    const length = e.target.value.length;
    console.log(length);

    const textarea = e.target;

    if (length < 135) {
        // Ajouter un arrière-plan à l'ensemble du texte du textarea
        textarea.style.background = '#ff5e5e2e';
    } else {
        textarea.style.background = '#f5f5f5'; // Changez cette couleur selon vos préférences
    }
});

const addParagraphButton = document.querySelector('.button_paragraph');


addParagraphButton.addEventListener('click', function() {
    let collectionHolder = document.querySelector('.paragraph');
    let index = collectionHolder.dataset.index;
    

    let newParagraph = collectionHolder.dataset.prototype;

    newParagraph = newParagraph.replace(/__name__/g, index);

    let newParagraphLi = document.createElement('li');
    newParagraphLi.classList.add('h-auto', 'mb-8', 'border', 'border-gray-200');
    newParagraphLi.innerHTML = newParagraph;

    collectionHolder.appendChild(newParagraphLi);

    collectionHolder.dataset.index = parseInt(index) + 1;
});

    const addListButton = document.querySelector('.button__list');

    addListButton.addEventListener('click', function() {
        let collectionHolder = document.querySelector('.list');
        let index = collectionHolder.dataset.index;
        let newList = collectionHolder.dataset.prototype;
        newList = newList.replace(/__name__/g, index);
        let newListLi = document.createElement('li');
        newListLi.innerHTML = newList;

        collectionHolder.appendChild(newListLi);

        collectionHolder.dataset.index = parseInt(index) + 1;
    });

    function submitChatGptForm(keyChatGpt, subtitle, id) {
        event.preventDefault();
        const prompt = subtitle + "\n' Créez un paragraphe en markdown Pour le titre ci-dessous, qui sera introduit dans un articles. Le texte doit etre fluide à lire, ajoute des sauts de ligne. Si une phrase est intérésante mes la en gras (pas obligatoire). N'oubliez pas d'utiliser la syntaxe markdown appropriée pour formater votre texte de manière lisible et attrayante. ";
        fetch('https://api.openai.com/v1/chat/completions', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': 'Bearer ' + keyChatGpt,
            },
            body: JSON.stringify({ 
                model: 'gpt-4o',
                messages: [
                    {
                        role: 'user',
                        content:  prompt,
                    },
                ],
            }),
        })
        .then(response => response.json()) 
        .then(data => {
            const content = data.choices[0].message.content;
            const formattedContent = content.replace(/\\n/g, '\n'); 
            document.getElementById(id + '_paragraph').value = formattedContent;
        })
        .catch(error => {
            console.error('Erreur lors de la récupération de la réponse de GPT:', error);
        });
    }
    </script>
{% endblock %}